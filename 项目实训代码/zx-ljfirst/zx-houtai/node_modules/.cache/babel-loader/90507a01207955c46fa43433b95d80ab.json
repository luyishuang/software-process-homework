{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u5927\\u4E09\\\\\\u5927\\u4E09\\u4E0A\\\\\\u79FB\\u52A8web\\u5F00\\u53D1\\\\myapp\\\\src\\\\ToDolist\\\\Todoinput.js\";\nimport React, { Component } from 'react'; //受控组件：value值呗react控制的表单元素\n//可以实时获取表单元素的值（实现表单验证） 写法相对麻烦\n//\n\nexport default class Todoinput extends Component {\n  // 两种绑定this的方式\n  constructor() {\n    super();\n\n    this.handleInput = e => {\n      //绑定this 事件处理函数写成箭头函数，或者用bind\n      if (e.keyCode === 13) {\n        //敲回车\n        //console.log(e.target.value);//获取input框的内容\n        this.props.add(e.target.value);\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: parseInt(e.target.value === '' ? 0 : e.target.value)\n      });\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n    this.state = {\n      a: '',\n      b: '',\n      c: ''\n    };\n  }\n\n  componentDidMount() {\n    // console.log(this.ref.a);\n    this.refs.a.focus();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.state.b + this.state.c > 10 ? 'box' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"inp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"\\u8BF7\\u8F93\\u5165\\u7B2C\\u4E00\\u4E2A\\u6570\\uFF1A\"), React.createElement(\"input\", {\n      ref: \"a\",\n      id: \"inp\",\n      name: \"a\",\n      onChange: this.handleChange,\n      value: this.state.a,\n      onKeyDown: this.handleInput,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      style: {\n        color: 'red',\n        fontSize: '18px'\n      },\n      onClick: () => {\n        this.handleChange();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"));\n  }\n\n} // 受控组件：\n// 1、给input标签添加value属性，赋值为state的值\n// 2、给input标签绑定onChange事件，\n// 在事件处理函数中setState\n// 3、一个事件处理函数控制多个表单元素时，\n// 给input标签加上name属性,事件处理函数中写：\n// setState({[e.target.name]:e.target.value})","map":{"version":3,"sources":["E:\\大三\\大三上\\移动web开发\\myapp\\src\\ToDolist\\Todoinput.js"],"names":["React","Component","Todoinput","constructor","handleInput","e","keyCode","props","add","target","value","handleChange","setState","name","parseInt","bind","state","a","b","c","componentDidMount","refs","focus","render","color","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;;AACA,eAAe,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAC7C;AACAE,EAAAA,WAAW,GAAE;AACT;;AADS,SASbC,WATa,GASCC,CAAD,IAAO;AAChB;AACA,UAAGA,CAAC,CAACC,OAAF,KAAc,EAAjB,EAAoB;AAAC;AACjB;AACA,aAAKC,KAAL,CAAWC,GAAX,CAAeH,CAAC,CAACI,MAAF,CAASC,KAAxB;AACH;AACJ,KAfY;;AAAA,SAgBbC,YAhBa,GAgBGN,CAAD,IAAK;AAChB,WAAKO,QAAL,CAAc;AACV,SAACP,CAAC,CAACI,MAAF,CAASI,IAAV,GAAgBC,QAAQ,CAACT,CAAC,CAACI,MAAF,CAASC,KAAT,KAAiB,EAAjB,GAAoB,CAApB,GAAsBL,CAAC,CAACI,MAAF,CAASC,KAAhC;AADd,OAAd;AAGH,KApBY;;AAET,SAAKN,WAAL,GAAmB,KAAKA,WAAL,CAAiBW,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,CAAC,EAAC,EADO;AAETC,MAAAA,CAAC,EAAC,EAFO;AAGTC,MAAAA,CAAC,EAAC;AAHO,KAAb;AAKH;;AAaDC,EAAAA,iBAAiB,GAAE;AACf;AACA,SAAKC,IAAL,CAAUJ,CAAV,CAAYK,KAAZ;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAE,KAAKP,KAAL,CAAWE,CAAX,GAAa,KAAKF,KAAL,CAAWG,CAAxB,GAA0B,EAA1B,GAA6B,KAA7B,GAAmC,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADJ,EAEI;AAAO,MAAA,GAAG,EAAC,GAAX;AAAe,MAAA,EAAE,EAAC,KAAlB;AAAwB,MAAA,IAAI,EAAC,GAA7B;AAAiC,MAAA,QAAQ,EAAE,KAAKR,YAAhD;AAA8D,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWC,CAAhF;AAAmF,MAAA,SAAS,EAAE,KAAKb,WAAnG;AAAgH,MAAA,IAAI,EAAC,MAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EASI;AACI,MAAA,KAAK,EAAE;AAACoB,QAAAA,KAAK,EAAC,KAAP;AAAaC,QAAAA,QAAQ,EAAC;AAAtB,OADX;AAEI,MAAA,OAAO,EAAE,MAAI;AAAC,aAAKd,YAAL;AAAoB,OAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,CADJ;AAiBH;;AA7C4C,C,CA+CjD;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\r\n//受控组件：value值呗react控制的表单元素\r\n//可以实时获取表单元素的值（实现表单验证） 写法相对麻烦\r\n//\r\nexport default class Todoinput extends Component {\r\n    // 两种绑定this的方式\r\n    constructor(){\r\n        super();\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.state = {\r\n            a:'',\r\n            b:'',\r\n            c:''\r\n        }\r\n    }\r\n    handleInput =(e) => {\r\n        //绑定this 事件处理函数写成箭头函数，或者用bind\r\n        if(e.keyCode === 13){//敲回车\r\n            //console.log(e.target.value);//获取input框的内容\r\n            this.props.add(e.target.value);\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.name]:parseInt(e.target.value===''?0:e.target.value)\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        // console.log(this.ref.a);\r\n        this.refs.a.focus();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={this.state.b+this.state.c>10?'box':''}>\r\n                <label htmlFor=\"inp\">请输入第一个数：</label>{/*点到这行字焦点自动到第一个input框框*/}\r\n                <input ref=\"a\" id=\"inp\" name=\"a\" onChange={this.handleChange} value={this.state.a} onKeyDown={this.handleInput} type=\"text\" />\r\n                {/* <input name=\"b\" onChange={this.handleChange} value={this.state.b} onKeyDown={this.handleInput} type=\"text\" />+\r\n                <input name=\"c\" onChange={this.handleChange} value={this.state.c} onKeyDown={this.handleInput} type=\"text\" />=\r\n                <p>{parseInt(this.state.a+this.state.b+this.state.c)}</p> */}\r\n                {/* 非受控组件：一次性获取或处理表单元素的值 */}\r\n                {/* <input ref='a' type='text' id=\"inp\" /> */}\r\n                {/* <input ref={(inp)=>{this.inp=inp}} type=\"text\"/> */}\r\n                <button\r\n                    style={{color:'red',fontSize:'18px'}}\r\n                    onClick={()=>{this.handleChange()}}>\r\n                    提交\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// 受控组件：\r\n// 1、给input标签添加value属性，赋值为state的值\r\n// 2、给input标签绑定onChange事件，\r\n// 在事件处理函数中setState\r\n// 3、一个事件处理函数控制多个表单元素时，\r\n// 给input标签加上name属性,事件处理函数中写：\r\n// setState({[e.target.name]:e.target.value})"]},"metadata":{},"sourceType":"module"}